Project Summary: Levantini

Levantini is a modern, interactive web application for learning Levantine Arabic. It is built using React, TypeScript, and Supabase.

Key Features:
- Interactive lessons and exercises
- Personalized learning paths
- Vocabulary builder with spaced repetition
- Grammar lessons
- Pronunciation guide
- Progress tracking
- Offline support and Dark mode

Technology Stack:
- Frontend: React, TypeScript, Vite, TailwindCSS, Lucide React
- Backend: Supabase (PostgreSQL, Auth, Edge Functions)
- API Integration: OpenAI

Project Structure Overview:
- src/components/: React components
- src/context/: Context providers (e.g., SupabaseContext)
- src/hooks/: Custom hooks (e.g., useDecks, useFlashcards)
- src/styles/: Global styles
- src/types/: TypeScript types (including Supabase types)
- src/utils/ and src/lib/: Utility functions and service logic
- supabase/migrations/: Database schema migrations
- supabase/functions/: Supabase Edge Functions

Supabase Integration:
- Used for authentication, database (PostgreSQL), and serverless functions (Edge Functions).
- Key tables likely include `progress` and `learned_words`.

OpenAI Integration:
- Integrated, likely for language-related tasks (translation, grammar checks, generating examples).

The codebase includes standard files like package.json, .gitignore, vite.config.ts, tsconfig.json, and README.md. 